<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        ">


	<context:annotation-config />
	<!-- 自动定时任务注解 -->
	<task:annotation-driven />
	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		location="classpath:application.properties"
		ignore-unresolvable="true" />
	<!-- 加载配置属性文件结束！ -->

	<context:component-scan
			base-package="com.zerokong.bookgrabber" annotation-config="true">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- otc datasource configuration begin -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
		<property name="driverClassName"
			value="${spring.datasource.druid.dirveClassName}" />
		<property name="url" value="${spring.datasource.druid.url}" />
		<property name="username"
			value="${spring.datasource.druid.otc.username}" />
		<property name="password"
			value="${spring.datasource.druid.otc.password}" />
		<property name="initialSize"
			value="${spring.datasource.druid.initialSize}" />
		<property name="minIdle"
			value="${spring.datasource.druid.min-idle}" />
		<property name="maxActive"
			value="${spring.datasource.druid.max-active}" />
		<property name="maxWait"
			value="${spring.datasource.druid.max-wait}" />
		<property name="validationQuery" value="SELECT 1 from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="logAbandoned" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="900" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.mysql.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.zerokong.bookgrabber.bean</value>
			</list>
		</property>
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<!-- 配置Hibernate事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 开启通过注解@Transactional管理事务 -->
	<tx:annotation-driven
		transaction-manager="txManager" proxy-target-class="true" />

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="frozen*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
</beans>